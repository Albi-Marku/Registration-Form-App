trigger:
  branches:
    include:
      - main   # production branch
      - test   # test branch

variables:
  imageName: registration-form-app
  acrName: dockerappregistry1
  acrLoginServer: dockerappregistry1.azurecr.io
  tag: '$(Build.BuildId)'  # unique tag per build

stages:
# -------------------------------
# Stage 1: Build & Push Docker Image
# -------------------------------
- stage: BuildAndPush
  displayName: Build & Push Docker Image
  jobs:
    - job: BuildPushJob
      displayName: Build & Push Image
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: Checkout@1

        # Login to ACR
        - task: AzureCLI@2
          inputs:
            azureSubscription: 'Your-Azure-Service-Connection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              echo "Logging in to ACR..."
              az acr login --name $(acrName)

        # Build Docker image
        - task: Docker@2
          inputs:
            containerRegistry: '$(acrName)'
            repository: $(imageName)
            command: 'build'
            Dockerfile: '**/Dockerfile'
            tags: $(tag)

        # Push Docker image
        - task: Docker@2
          inputs:
            containerRegistry: '$(acrName)'
            repository: $(imageName)
            command: 'push'
            tags: $(tag)

# -------------------------------
# Stage 2: Deploy to Kubernetes
# -------------------------------
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: BuildAndPush
  jobs:
    - deployment: DeployToAKS
      displayName: Deploy to AKS Cluster
      environment: 'Kubernetes'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureCLI@2
                inputs:
                  azureSubscription: 'Your-Azure-Service-Connection'
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    if [ "$(Build.SourceBranchName)" == "main" ]; then
                      echo "Deploying to PROD AKS..."
                      kubectl config use-context myapp-aks-prod
                      kubectl apply -f k8s/prod/secret.yaml
                      kubectl apply -f k8s/prod/postgres-pvc.yaml
                      kubectl apply -f k8s/prod/postgres-statefulset.yaml
                      # Update Deployment image to the new tag
                      kubectl set image deployment/registration-form-app registration-form-app=$(acrLoginServer)/$(imageName):$(tag)
                      kubectl apply -f k8s/prod/app-service.yaml
                    else
                      echo "Deploying to TEST AKS..."
                      kubectl config use-context myapp-aks-test
                      kubectl apply -f k8s/test/secret.yaml
                      kubectl apply -f k8s/test/postgres-pvc.yaml
                      kubectl apply -f k8s/test/postgres-statefulset.yaml
                      kubectl set image deployment/registration-form-app registration-form-app=$(acrLoginServer)/$(imageName):$(tag)
                      kubectl apply -f k8s/test/app-service.yaml
